/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * API
 * OpenAPI spec version: 1.0
 */
import axios from 'axios'
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
import type {
  CreateTaskRequest,
  SignInRequest,
  SignInResponse,
  SignUpRequest,
  TaskModel,
  TaskStatusModel,
  TasksControllerFilterParams
} from '../schemas'




  export const usersControllerSignIn = <TData = AxiosResponse<SignInResponse>>(
    signInRequest: SignInRequest, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/users/sign-in`,
      signInRequest,options
    );
  }

export const usersControllerSignUp = <TData = AxiosResponse<void>>(
    signUpRequest: SignUpRequest, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/users/sign-up`,
      signUpRequest,options
    );
  }

export const tasksControllerCreate = <TData = AxiosResponse<TaskModel>>(
    createTaskRequest: CreateTaskRequest, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/tasks`,
      createTaskRequest,options
    );
  }

export const tasksControllerUpdate = <TData = AxiosResponse<void>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.put(
      `/tasks`,undefined,options
    );
  }

export const tasksControllerFilter = <TData = AxiosResponse<TaskModel[]>>(
    params: TasksControllerFilterParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/tasks`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

export const tasksControllerDelete = <TData = AxiosResponse<void>>(
    taskId: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.delete(
      `/tasks/${taskId}`,options
    );
  }

export const tasksControllerListStatuses = <TData = AxiosResponse<TaskStatusModel[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/tasks/status`,options
    );
  }

export type UsersControllerSignInResult = AxiosResponse<SignInResponse>
export type UsersControllerSignUpResult = AxiosResponse<void>
export type TasksControllerCreateResult = AxiosResponse<TaskModel>
export type TasksControllerUpdateResult = AxiosResponse<void>
export type TasksControllerFilterResult = AxiosResponse<TaskModel[]>
export type TasksControllerDeleteResult = AxiosResponse<void>
export type TasksControllerListStatusesResult = AxiosResponse<TaskStatusModel[]>
